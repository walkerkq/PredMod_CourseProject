rep("WV", 3),
rep("WI", 2),
"WY"
)
states <- c(rep("AL", 2),
rep("AZ", 2),
rep("AR", 2),
rep("CA", 11),
rep("CO", 2),
rep("CT", 2),
rep("DC", 2),
rep("FL", 6),
rep("GA", 3),
"HI",
rep("ID", 2),
rep("IL", 6),
rep("IN", 3),
rep("IA", 2),
"KS",
rep("KY", 2),
rep("LA", 2),
rep("ME", 2),
rep("MD", 2),
rep("MA", 3),
rep("MI", 3),
rep("MN", 2),
"MS",
rep("MO", 2),
"MT",
rep("NE", 2),
"NV",
rep("NJ", 2),
rep("NY", 7),
rep("NC", 4),
"ND",
rep("OH", 7),
rep("OK", 2),
rep("OR", 3),
rep("PA", 8),
rep("PR", 2),
"RI",
rep("SC", 4),
"SD",
rep("TN", 6),
rep("TX", 7),
rep("UT", 2),
rep("VA", 4),
"VT",
rep("WA", 2),
rep("WV", 3),
rep("WI", 2),
"WY"
)
states
states <- c(rep("AL", 3),
rep("AZ", 3),
rep("AR", 2),
rep("CA", 11),
rep("CO", 2),
rep("CT", 2),
rep("DC", 2),
rep("FL", 7),
rep("GA", 3),
"HI",
rep("ID", 2),
rep("IL", 6),
rep("IN", 3),
rep("IA", 2),
"KS",
rep("KY", 2),
rep("LA", 2),
rep("ME", 2),
rep("MD", 2),
rep("MA", 3),
rep("MI", 3),
rep("MN", 2),
"MS",
rep("MO", 2),
"MT",
rep("NE", 2),
"NV",
rep("NJ", 2),
rep("NY", 7),
rep("NC", 4),
"ND",
rep("OH", 7),
rep("OK", 2),
rep("OR", 3),
rep("PA", 8),
rep("PR", 2),
"RI",
rep("SC", 4),
"SD",
rep("TN", 6),
rep("TX", 7),
rep("UT", 2),
rep("VA", 4),
"VT",
rep("WA", 2),
rep("WV", 3),
rep("WI", 2),
"WY"
)
pharm <- cbind(data.frame(names, stringsAsFactors=FALSE), data.frame(links, stringsAsFactors=FALSE), data.frame(states))
tail(pharm)
head(pharm)
pharm <- cbind(data.frame(name, stringsAsFactors=FALSE), data.frame(state), data.frame(link, stringsAsFactors=FALSE))
source('~/.active-rstudio-document')
pharm
source('~/.active-rstudio-document')
pharm[,1:2]
state <- c(rep("AL", 3), rep("AZ", 3), rep("AR", 2), rep("CA", 11), rep("CO", 2), rep("CT", 2),
"DC", rep("FL", 7), rep("GA", 3), "HI", rep("ID", 2), rep("IL", 6),
rep("IN", 3), rep("IA", 2), "KS", rep("KY", 2), rep("LA", 2), rep("ME", 2), rep("MD", 2), rep("MA", 3),
rep("MI", 3), rep("MN", 2), "MS", rep("MO", 2), "MT", rep("NE", 2), "NV", rep("NJ", 2), rep("NY", 7),
rep("NC", 4), "ND", rep("OH", 7), rep("OK", 2), rep("OR", 3), rep("PA", 8), rep("PR", 2), "RI",
rep("SC", 4), "SD", rep("TN", 6), rep("TX", 7), rep("UT", 2), rep("VA", 4), "VT", rep("WA", 4),
rep("WV", 3),  rep("WI", 2), "WY")
pharm <- cbind(data.frame(name, stringsAsFactors=FALSE), data.frame(state), data.frame(link, stringsAsFactors=FALSE))
state
cbind(name,state[1:143])
state <- c(rep("AL", 3), rep("AZ", 3), rep("AR", 2), rep("CA", 11), rep("CO", 2), rep("CT", 2),
"DC", rep("FL", 7), rep("GA", 3), "HI", "ID", rep("IL", 6),
rep("IN", 3), rep("IA", 2), "KS", rep("KY", 2), rep("LA", 2), rep("ME", 2), rep("MD", 2), rep("MA", 3),
rep("MI", 3), rep("MN", 2), "MS", rep("MO", 2), "MT", rep("NE", 2), "NV", rep("NJ", 2), rep("NY", 7),
rep("NC", 4), "ND", rep("OH", 7), rep("OK", 2), rep("OR", 3), rep("PA", 8), rep("PR", 2), "RI",
rep("SC", 4), "SD", rep("TN", 6), rep("TX", 7), rep("UT", 2), rep("VA", 4), "VT", rep("WA", 4),
rep("WV", 3),  rep("WI", 2), "WY")
pharm <- cbind(data.frame(name, stringsAsFactors=FALSE), data.frame(state), data.frame(link, stringsAsFactors=FALSE))
pharm[,1:2]
state <- c(rep("AL", 3), rep("AZ", 3), rep("AR", 2), rep("CA", 11), rep("CO", 2), rep("CT", 2),
"DC", rep("FL", 7), rep("GA", 3), "HI", "ID", rep("IL", 6),
rep("IN", 3), rep("IA", 3), "KS", rep("KY", 3), rep("LA", 2), rep("ME", 2), rep("MD", 2), rep("MA", 4),
rep("MI", 4), rep("MN", 2), "MS", rep("MO", 2), "MT", rep("NE", 2), "NV", rep("NJ", 3), rep("NY", 8),
rep("NC", 4), "ND", rep("OH", 7), rep("OK", 2), rep("OR", 3), rep("PA", 8), rep("PR", 2), "RI",
rep("SC", 4), "SD", rep("TN", 6), rep("TX", 7), rep("UT", 2), rep("VA", 4), "VT", rep("WA", 4),
rep("WV", 3),  rep("WI", 2), "WY")
state <- state[1:143]
cbind(state, name)
state <- c(rep("AL", 3), rep("AZ", 3), rep("AR", 2), rep("CA", 11), rep("CO", 2), rep("CT", 2),
"DC", rep("FL", 7), rep("GA", 3), "HI", "ID", rep("IL", 6),
rep("IN", 3), rep("IA", 3), "KS", rep("KY", 3), rep("LA", 2), rep("ME", 2), rep("MD", 2), rep("MA", 4),
rep("MI", 4), rep("MN", 2), "MS", rep("MO", 2), "MT", rep("NE", 2), "NV", rep("NJ", 3), "NM", rep("NY", 8),
rep("NC", 4), "ND", rep("OH", 7), rep("OK", 2), rep("OR", 3), rep("PA", 8), rep("PR", 2), "RI",
rep("SC", 4), "SD", rep("TN", 6), rep("TX", 7), rep("UT", 2), rep("VA", 4), "VT", rep("WA", 4),
rep("WV", 3),  rep("WI", 2), "WY")
state <- state[1:143]
URL <- "https://www.natmatch.com/cgibin/instdisp.pl"
results <- htmlTreeParse(URL, useInternal=TRUE)
name <- xpathSApply(results, "//table[@class='list']//td",xmlValue)
progs <- xpathSApply(results, "//table[@class='list']//td",xmlValue)
?htmlTreeParse
results <- xmlTreeParse(URL, useInternal=TRUE)
URL <- "https://www.natmatch.com/cgibin"
results <- xmlTreeParse(URL, useInternal=TRUE)
URL <- "/Users/kwalker/Desktop/natmatch.html"
results <- htmlTreeParse(URL, useInternal=TRUE)
progs <- xpathSApply(results, "//table[@class='list']//td",xmlValue)
head(progs)
head(progs, n=40)
progs <- xpathSApply(results, "//table[@class='list']//td", xmlGetAttr)
?xmlGetAttr
?xmlValue
progs <- xpathSApply(results, "//table[@class='list']//td", xmlChildren)
head(progs)
as <- xpathSApply(results, "//table[@class='list']//td//a", xmlGetAttr, "href")
head(as)
progs <- xpathSApply(results, "//table[@class='list']//tr", xmlValue)
head(progs)
head(progs, n=50)
?rep
?count
?odds
for (i in 1:100) {
y <- i+3
x <- c(x, y)
}
x <- data.frame()
for (i in 1:100) {
y <- i+3
x <- c(x, y)
}
x
for (i in 1:100) {
i <- i+3
x <- rbind(x, y)
}
x <- data.frame()
for (i in 1:100) {
i <- i+3
x <- rbind(x, y)
}
x
x <- data.frame()
for (i in 1:100) {
i <- i+3
x <- rbind(x, i)
}
x
x <- data.frame()
for (i in 1:100) {
i <- i*3
x <- rbind(x, i)
}
x
for (i in 1:100) { i <- i*3, x <- rbind(x, i) }
for (i in 1:100) { i <- i*3; x <- rbind(x, i) }
x <- data.frame()
for (i in 1:100) { i <- i*3; x <- rbind(x, i) }
x
progs
head(x)
which(grep("↑", progs))
grep("↑", progs)
for (i in 1:100) { i <- i*3; x <- rbind(x, i) }
progs <- progs[-grep("↑", progs),]
progs <- progs[-grep("↑", progs)]
head(progs)
head(progs, n=50)
n <- strsplit(" \n", progs)
n
?strsplit
n <- strsplit(progs, " \n")
head(n)
tail(n)
head(progs, n=10)
length(progs[3])
progs[3]
char(progs[3])
nchar(progs[3])
nchar(progs[1])
progs <- progs[nchar(progs) > 33]
progs
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
head(gdn)
str(gdn)
for (i in c(1,6,8)) {
gdn[,i] <- as.factor(gdn[,1])
}
str(gdn)
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
for (i in c(1,6,8)) {
gdn[,i] <- as.factor(gdn[,i])
}
for (x in c(10, 11)) {
gdn[,i] <- as.Date(gdn[,i], format="%m/%d/%y")
}
str(gdn)
names(gdn)
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
for (i in c(1,6,8)) {
gdn[,i] <- as.factor(gdn[,i])
}
for (x in c(10, 11)) {
gdn[,x] <- as.Date(gdn[,x], format="%m/%d/%y")
}
str(gdn)
gdn <- gdn[ ,1:12]
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
gdn <- gdn[ ,1:12]
gdn$Size <- paste(gdn$Width, gdn$Height, sep=" x ")
for (i in c(1,6,8, 13)) { gdn[,i] <- as.factor(gdn[,i]) }
for (x in c(10, 11)) { gdn[,x] <- as.Date(gdn[,x], format="%m/%d/%y") }
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
gdn$Size <- paste(gdn$Width, gdn$Height, sep=" x ")
for (i in c(1,6,8, 13)) { gdn[,i] <- as.factor(gdn[,i]) }
for (x in c(10, 11)) { gdn[,x] <- as.Date(gdn[,x], format="%m/%d/%y") }
gdn <- gdn[ ,c(1, 4:12, 14)]
source('~/.active-rstudio-document')
library("ggplot2")
ggplot(gdn, aes(CTR, Size)) + geom_line()
ggplot(gdn, aes(CTR, Size)) + geom_point()
ggplot(gdn, aes(Size, CTR)) + geom_point()
aggregate(CTR~Size, gdn, mean)
means <- aggregate(CTR~Size, gdn, mean)
ggplot(means, aes(Size, CTR)) + geom_point()
ctr_logo_means <- aggregate(CTR~Logo, gdn, mean)
ctr_logo_means
ggplot(ctr_logo_means, aes(Logo, CTR)) + geom_bar(stat="identity")
ggplot(ctr_logo_means, aes(Logo, CTR)) + geom_bar(stat="identity") + ylim(c(0, .5))
ggplot(ctr_logo_means, aes(Logo, CTR)) + geom_bar(stat="identity", aes(fill=Logo)) + ylim(c(0, .5)) + labs(title="Avg. CTR, with or without logo present")
ggplot(ctr_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Size))
ctr_size_means <- aggregate(CTR~Size, gdn, mean)
ggplot(ctr_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Size))
ggplot(ctr_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Size)) + ylim(c(0, .5)) + labs(title="Avg. CTR by size")
ggplot(ctr_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Size)) + ylim(c(0, .5)) + labs(title="Avg. CTR by size") + scale_fill_brewer(palette="Paired")
ggplot(ctr_logo_means, aes(Logo, CTR)) + geom_bar(stat="identity", aes(fill=Logo)) + ylim(c(0, .5)) + labs(title="Avg. CTR, with or without logo present") + scale_fill_brewer(palette="Paired")
ctr_gender_means <- aggregate(CTR~Gender, gdn, mean)
ctr_gender_means <- aggregate(CTR~Gender, gdn, mean)
ggplot(ctr_gender_means, aes(Gender, CTR)) + geom_bar(stat="identity", aes(fill=Logo)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Gender") + scale_fill_brewer(palette="Paired")
ggplot(ctr_gender_means, aes(Gender, CTR)) + geom_bar(stat="identity", aes(fill=Gender)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Gender") + scale_fill_brewer(palette="Paired")
ggplot(ctr_gender_means, aes(Gender, CTR)) + geom_bar(stat="identity", aes(fill=Gender)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
gdn$Gender
gdn$Gender <- gsub("NA", "No Photo", gdn$Gender)
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
gdn$Size <- paste(gdn$Width, gdn$Height, sep=" x ")
gdn$Gender <- gsub("NA", "No Photo", gdn$Gender)
gdn$Gender
gdn$Gender <- gsub(NA, "No Photo", gdn$Gender)
for (i in 1:length(gdn)) { if (is.na(gdn$Gender[i])) { gdn$Gender[i] <- "No photo" }}
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
gdn$Size <- paste(gdn$Width, gdn$Height, sep=" x ")
for (i in 1:length(gdn)) { if (is.na(gdn$Gender[i])) { gdn$Gender[i] <- "No photo" }}
gdn$Gender
for (i in 1:length(gdn[,1])) { if (is.na(gdn$Gender[i])) { gdn$Gender[i] <- "No photo" }}
gdn$Gender
gdn <- read.csv("/Users/kwalker/Desktop/GDN.csv", stringsAsFactors=FALSE)
gdn$Size <- paste(gdn$Width, gdn$Height, sep=" x ")
for (i in 1:length(gdn[,1])) { if (is.na(gdn$Gender[i])) { gdn$Gender[i] <- "No photo" }}
for (i in c(1,6,8, 14)) { gdn[,i] <- as.factor(gdn[,i]) }
for (x in c(10, 11)) { gdn[,x] <- as.Date(gdn[,x], format="%m/%d/%y") }
gdn <- gdn[ ,c(1, 4:12, 14)]
ctr_gender_means <- aggregate(CTR~Gender, gdn, mean)
ggplot(ctr_gender_means, aes(Gender, CTR)) + geom_bar(stat="identity", aes(fill=Gender)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Gender, CTR)) + geom_point()
ggplot(gdn, aes(Gender, CTR)) + geom_point()  + ylim(c(0, 1)) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Gender, CTR)) + geom_boxplot()
?geom_boxplot
ggplot(gdn, aes(Gender, CTR)) + geom_boxplot() + stat_summary(fun.y=mean, geom="point", shape=5, size=4)
ggplot(gdn, aes(Gender, CTR)) + geom_boxplot() + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Gender, CTR)) + geom_boxplot(aes(fill=Gender)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(ctr_gender_means, aes(Gender, CTR)) + geom_bar(stat="identity", aes(fill=Gender)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Gender, CTR)) + geom_boxplot(aes(fill=Gender)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="Avg. CTR by Gender in Photo (b=both)") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Logo, CTR)) + geom_boxplot(aes(fill=Logo)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="Avg. CTR by logo presence") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Size)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by size") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Size)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by size") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Logo, CTR)) + geom_boxplot(aes(fill=Logo)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by logo presence") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Audience, CTR)) + geom_boxplot(aes(fill=Audience)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Audience") + scale_fill_brewer(palette="Paired")
ggplot(ctr_gender_means, aes(Audience, CTR)) + geom_bar(stat="identity", aes(fill=Audience)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Audience") + scale_fill_brewer(palette="Paired")
ctr_aud_means <- aggregate(CTR~Audience, gdn, mean)
ggplot(ctr_aud_means, aes(Audience, CTR)) + geom_bar(stat="identity", aes(fill=Audience)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Audience") + scale_fill_brewer(palette="Paired")
ggplot(ctr_aud_means, aes(Audience, CTR)) + geom_bar(stat="identity", aes(fill=Audience))  + labs(title="Avg. CTR by Audience") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Audience, CTR)) + geom_boxplot(aes(fill=Audience)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Audience") + scale_fill_brewer(palette="Paired")
ctr_camp_means <- aggregate(CTR~Campaign, gdn, mean)
ggplot(ctr_camp_means, aes(Campaign, CTR)) + geom_bar(stat="identity", aes(fill=Campaign)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Campaign") + scale_fill_brewer(palette="Paired")
ctr_camp_means <- aggregate(CTR~Ad.Campaign, gdn, mean)
ggplot(ctr_camp_means, aes(Ad.Campaign, CTR)) + geom_bar(stat="identity", aes(fill=Ad.Campaign)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Ad.Campaign") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Ad.Campaign, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Ad.Campaign") + scale_fill_brewer(palette="Paired")
ctr_app_means <- aggregate(CTR~Apply.is.first.word, gdn, mean)
colnames(ctr_app_means) <- c("Apply.First", "CTR")
ctr_app_means <- aggregate(CTR~Apply.is.first.word, gdn, mean)
colnames(ctr_app_means) <- c("Apply.First", "CTR")
ggplot(ctr_app_means, aes(Apply.First, CTR)) + geom_bar(stat="identity", aes(fill=Apply.First)) + ylim(c(0, .5)) + labs(title="Avg. CTR by Apply.First") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Apply.First, CTR)) + geom_boxplot(aes(fill=Apply.First)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Apply.First") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Apply.is.first.word, CTR)) + geom_boxplot(aes(fill=Apply.is.first.word)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Apply.First") + scale_fill_brewer(palette="Paired")
size.a <- ggplot(ctr_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Size)) + ylim(c(0, .5)) + labs(title="Avg. CTR by size") + scale_fill_brewer(palette="Paired")
size.b <-  ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Size)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by size") + scale_fill_brewer(palette="Paired")
grid.arrange(size.a, size.b)
?grid.arrange
?gridArrange
?gridarrange
library("gridExtra")
grid.arrange(size.a, size.b)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
n <- aggregate(CTR~Size+Audience, gdn, mean)
n
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Audience)) + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
ctr_aud_size_means <- aggregate(CTR~Size+Audience, gdn, mean)
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", aes(fill=Audience)) + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
as.a
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge" aes(fill=Audience)) + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Audience)) + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Audience)) + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Audience)) # + ylim(c(0,  .5)) + labs(title="s") + scale_fill_brewer(palette="Paired")
as.a
as.b <- ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Audience)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.b
as.b <- ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.b
Audience
as.b <- ggplot(gdn, aes(Size, CTR)) + geom_boxplot(aes(fill=Audience)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.b
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Audience))  labs(title="Avg. CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.a <- ggplot(ctr_aud_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Audience)) +  labs(title="Avg. CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.a
ctr_ad_size_means <- aggregate(CTR~Size+Ad.Campaign, gdn, mean)
as.a <- ggplot(ctr_ad_size_means, aes(Size, CTR)) + geom_bar(stat="identity", position="dodge", aes(fill=Ad.Campaign)) +  labs(title="Avg. CTR by Size and Campaign") + scale_fill_brewer(palette="Paired")
as.a
ggplot(gdn, aes(Start.Date, CTR)) + geom_point()
as.b <- ggplot(gdn, aes(Start.Date, CTR)) + geom_boxplot(aes(fill=Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
as.b
as.b <- ggplot(gdn, aes(Start.Date, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(Start.Date, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
ggplot(gdn, aes(End.Date, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
n <- aggregate(CTR~End.Date, gdn, mean)
n
end_date_means <- aggregate(CTR~End.Date, gdn, mean)
end.a <- ggplot(end_date_means, aes(End.Date, CTR)) + geom_bar(stat="identity", aes(fill=End.Date)) + ylim(c(0,.5)) + labs(title="Avg. CTR by End.Date") + scale_fill_brewer(palette="Paired")
end.b <- ggplot(gdn, aes(End.Date, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
grid.arrange(end.a, end.b, ncol=2)
end.a <- ggplot(end_date_means, aes(End.Date, CTR)) + geom_bar(stat="identity", aes(fill="blue")) + labs(title="Avg. CTR by End.Date") + scale_fill_brewer(palette="Paired")
end.b <- ggplot(gdn, aes(End.Date, CTR)) + geom_boxplot(aes(fill=Ad.Campaign)) + stat_summary(fun.y=mean, geom="point", shape=5, size=4) + labs(title="CTR by Size and Audience") + scale_fill_brewer(palette="Paired")
grid.arrange(end.a, end.b, ncol=2)
install.packages("UsingR")
library("UsingR")
data(father.sonheight)
data(fathersonheight)
data(father.son.height)
data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
par("mar")
par(mar=c(1,1,1,1))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
par(mar=c(2,2,2,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
plot(galton$parent,galton$child)
par(mfrow=c(1,1))
plot(galton$parent,galton$child)
plot(galton$parent,galton$child, alpha=0.5)
library("ggplot2")
ggplot(aes(parent,child), galton) +geom_point(alpha=0.5)
ggplot(galton, aes(parent,child)) +geom_point()
ggplot(galton, aes(parent,child)) +geom_point(aes(alpha=0.5))
ggplot(galton, aes(parent,child)) +geom_point(aes(alpha=0.5), size=3)
ggplot(galton, aes(parent,child)) +geom_point(aes(alpha=0.5), size=3, color="blue")
ggplot(galton, aes(parent,child)) +geom_point(aes(alpha=0.5), size=3, color="blue") + stat_smooth(method="lm")
lm(I(child-mean(child))~I(parent-mean(parent)) -1, data=galton)
lm(I(child)~I(parent) -1, data=galton)
lm(child~parent, data=galton)
?lm
str(galton)
x <- child
x <- galton$child
y <- galton$parent
data(father.son)
library(UsingR)
data(father.son)
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
plot(x, y, xlab="Father Normalized", ylab="Son Normalized", xlim=c(-3,3), ylim=c(-3,3), col="black", cex=1.1, pch=21, frame=FALSE, bg="lightblue")
abline(0,1)
abline(0, rho, lwd=2)
?rho
rho <- cor(x,y)
abline(0, rho, lwd=2)
abline(0, 1/rho, lwd=2)
abline(h=0); abline(v=0)
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4)~parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
cor(gch_nor, gpa_nor)
lm(pch_nor~pga_nor)
lm(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
lm(w~x)
lm(x~w)
plot(x,w)
mu <- mean(x)
abline(mu)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta1 <- sum(y*x) / sum(x^2)
beta0 <- mean(y) - beta1*mean(x)
data(mtcards)
data(mtcars)
str(mtcards)
str(mtcars)
lm(mpg~weight, mtcars)
lm(mpg~wt, mtcars)
.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x-mean(x))/sd(x)
sn
xn
sd(x)
mean(x)
8.58-9.31
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x*w)
x*w
m <- x*w
mean(m)
mean(x)
mean(x)*w
mean(mean(x)*w)
mean((mean(x)^2)*w)
source('~/.active-rstudio-document', echo=TRUE)
confusionMatrix(testing$classe, mod1Predict)
set.seed(12345)
source('~/.active-rstudio-document', echo=TRUE)
predictions <- predict(mod2, cleanTest, type="class")
predictions
predictions <- predict(mod2, cleanTest)
predictions
predictions <- predict(mod2, cleanTest)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(prediction)
pml_write_files(predictions)
